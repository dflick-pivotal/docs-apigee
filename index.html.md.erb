---
title: Apigee Edge Service Broker for Pivotal Cloud Foundry
owner: Partners
---


This tile requires a Xenial stemcell.
<p class="note warning"><strong> WARNING:</strong>
The end-of-life date for Ubuntu Trusty is April 2019.
If a security vulnerability is found on this stemcell after April, it will not be fixed.</p>
<strong><%= modified_date %></strong>

This documentation describes the Apigee Edge Service Broker for Pivotal Cloud Foundry (PCF). The Apigee Edge Service Broker for PCF enables developers to proxy APIs for their PCF apps.


## <a id='overview'></a> Overview

The Apigee Edge Service Broker for PCF registers a service broker with PCF and exposes its service plans on the Marketplace. Using the service broker, you can create service plan instances using Apps Manager or the Cloud Foundry Command Line Interface (cf CLI) and bind them to their apps. Creating an Apigee service instance and binding it to an app creates an API proxy that handles requests for the PCF app.

Through the service broker, you can proxy calls to your PCF app with one of two varieties of Apigee Edge:

- Apigee Edge Public Cloud

    Calls to your PCF app are routed first through proxies you create on [Apigee Edge](http://docs.apigee.com/api-services/content/what-apigee-edge) Public Cloud. You can use the Apigee Edge management console to configure API request handling between clients and your PCF app.
    
- Apigee Edge Microgateway

    Calls to your PCF app are routed first through proxies exposed by [Apigee Edge Microgateway](http://docs.apigee.com/microgateway/latest/overview-edge-microgateway). When you use Apigee Edge Microgateway, you can specify whether you want the Microgateway instance and your PCF app to run in the same or separate Cloud Foundry containers.
    
See [Getting Started](#getting-started) for more about each option.


## <a id='features'></a> Key Features

After creating an Apigee Edge API proxy, developers can access the Apigee Edge management console to enhance the proxy with the following features:

- Data transformation, mediation, orchestration, and policies for rate limits
- Security, such as authentication and Role-Based Access Control
- Onboarding, including a developer portal to enable self-service
- Analytics for monitoring and business metrics analysis
- Monetization for rate plans, internationalization, and usage tracking


## <a id='snapshot'></a> Product Snapshot


The following table provides version and version-support information about Apigee Edge Service Broker for PCF:

<table class="nice">
    <th>Element</th>
    <th>Details</th>
        <tr>
        <td bgcolor="#edf0f4">Version</td>
        <td bgcolor="#edf0f4">v3.1.2</td>
    </tr>
    <tr>
        <td>Release date</td>
        <td>April 26, 2019</td>
    </tr>
    <tr>
        <td>Software component version</td>
        <td>Apigee Edge Service Broker for PCF v3.1.2</td>
    </tr>
    <tr>
        <td>Compatible Ops Manager version(s)</td>
        <td>v2.3.x, 2.4.x, 2.5.x</td>
    </tr>
    <tr>
        <td>Compatible Pivotal Application Service version(s)</td>
        <td>v2.3.x, 2.4.x, 2.5.x</td>
    </tr>
    <tr>
        <td>BOSH stemcell version</td>
        <td>Ubuntu Xenial</td>
    </tr>
    <tr>
        <td>IaaS support</td>
        <td>vSphere</td>
    </tr>
    <tr>
        <td bgcolor="#edf0f4">Version</td>
        <td bgcolor="#edf0f4">v3.1.1</td>
    </tr>
    <tr>
        <td>Release date</td>
        <td>September 24, 2018</td>
    </tr>
    <tr>
        <td>Software component version</td>
        <td>Apigee Edge Service Broker for PCF v3.1.1</td>
    </tr>
    <tr>
        <td>Compatible Ops Manager version(s)</td>
        <td>v2.1.x, v2.2.x, and v2.3.x</td>
    </tr>
    <tr>
        <td>Compatible Pivotal Application Service version(s)</td>
        <td>v2.1.x, 2.2.x, and v2.3.x</td>
    </tr>
    <tr>
        <td>BOSH stemcell version</td>
        <td>Ubuntu Trusty</td>
    </tr>
    <tr>
        <td>IaaS support</td>
        <td>vSphere</td>
    </tr>
</table>


## <a id='getting-started'></a> Getting Started

To begin using the Apigee Edge Service Broker, perform the procedures in the following topics:

1. [Installing and Configuring Apigee Edge for PCF](installing.html): Install and configure the Apigee Edge Service Broker for PCF tile to expose the Apigee Edge service plans on the Marketplace of your PCF deployment.

1. Choose an Apigee Edge product type and service plan to use.

When creating an instance of the Apigee service, you specify one of the following service plans. Each has its own benefits.

| Apigee Product | Service Plan | Description |
| ---- | ---- | ---- |
| Apigee Edge Public Cloud | `org` | Calls to your PCF app will be routed through a proxy in your Apigee Edge organization. For more on getting started, see [Proxying a PCF App with Apigee Edge ("org" plan)](proxying-org.html). |
| Apigee Edge Microgateway (same container) | `microgateway-coresident` | Calls to your PCF app will be routed through a proxy in an instance of Apigee Edge Microgateway running in the same Cloud Foundry container as your PCF app. For more on getting started, see [Proxying a PCF App with Apigee Edge Microgateway ("microgateway-coresident" plan)](proxying-microgateway-coresident.html). |
| Apigee Edge Microgateway (separate containers) | `microgateway` | Calls to your PCF app will be routed through a proxy in an instance of Apigee Edge Microgateway running in a separate Cloud Foundry container from your PCF app. For more on getting started, see [Proxying a PCF App with Apigee Edge Microgateway ("microgateway" plan)](proxying-microgateway.html). |


## <a id='prereqs'></a> Prerequisites

The Apigee Edge Service Broker for PCF has the following prerequisites:

* An Apigee Edge account (Public Cloud or Private Cloud) with an organization where API proxies can be created. To create an Edge account, see [Creating an Apigee Edge account](http://docs.apigee.com/api-services/content/creating-apigee-edge-account). For more information about Apigee organizations, see [Organization structure](http://docs.apigee.com/api-services/content/apigee-edge-organization-structure).
* Apigee Edge Microgateway, depending on the service plan you are using.
* A PCF Elastic Runtime (v2.3 to v2.5) deployment with Route Services enabled.
* A PAS Pivotal Application Services deployment for PCF v2.1.0 or later with Route Services enabled.
* The [cf CLI](https://github.com/cloudfoundry/cli) v6.20.0 or later, which includes  support for `route-services` operations.
* Node.js v4.x or later. PCF includes Node.js as a system buildpack, so you can install and run the service broker without Node installed locally, if necessary.


## <a id='feedback'></a> Feedback

Post any bugs, feature requests, questions, and usage articles to the [Apigee PCF Community Forum](https://community.apigee.com/spaces/134/integration.html).
